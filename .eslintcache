[{"/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/index.tsx":"1","/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/reportWebVitals.ts":"2","/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/App.tsx":"3","/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/List.tsx":"4"},{"size":500,"mtime":1608708349074,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1608708349077,"results":"7","hashOfConfig":"6"},{"size":702,"mtime":1609087344908,"results":"8","hashOfConfig":"6"},{"size":411,"mtime":1609087228365,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"eqhicv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/index.tsx",[],["19","20"],"/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/reportWebVitals.ts",[],"/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/App.tsx",[],"/media/rainman/PROJECT/personal project/typescript/react-typescript/react-hooks/src/List.tsx",["21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":11,"column":8,"nodeType":"28","endLine":11,"endColumn":24,"suggestions":"29"},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["32"],"no-global-assign","no-unsafe-negation",{"desc":"33","fix":"34"},"Update the dependencies array to be: [props, props.getItems]",{"range":"35","text":"36"},[292,308],"[props, props.getItems]"]